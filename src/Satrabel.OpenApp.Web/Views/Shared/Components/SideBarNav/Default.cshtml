@using Abp.Collections.Extensions
@using Satrabel.OpenApp.Web.Views
@using Satrabel.OpenApp.Web.Views.Shared.Components.SideBarNav
@model SideBarNavViewModel
@{
    var calculateMenuUrl = new Func<string, string>((url) =>
    {
        if (string.IsNullOrEmpty(url))
        {
            return ApplicationPath;
        }

        if (UrlChecker.IsRooted(url))
        {
            return url;
        }

        return ApplicationPath + url;
    });
}
<div class="sidebar">
    <nav class="sidebar-nav">
        <ul class="nav">
            @foreach (var menuItem in Model.MainMenu.Items)
            {
                if (menuItem.Items.IsNullOrEmpty())
                {
                    <li class="nav-item @(Model.ActiveMenuItemName == menuItem.Name ? "active" : "")">
                        <a class="nav-link" href="@calculateMenuUrl(menuItem.Url)" target="@menuItem.Target">
                            @if (!string.IsNullOrWhiteSpace(menuItem.Icon))
                            {
                                <i class="icon-@(menuItem.Icon)"></i>
                            }
                            <span>@menuItem.DisplayName</span>
                        </a>
                    </li>
                }
                else if (menuItem.Url == "-")
                {
                    <li class="nav-title">
                        
                            @if (!string.IsNullOrWhiteSpace(menuItem.Icon))
                            {
                                <i class="icon-@(menuItem.Icon)"></i>
                            }
                            <span>@menuItem.DisplayName</span>
                        
                    </li>
                    @foreach (var subMenuItem in menuItem.Items)
                    {
                        if (subMenuItem.Items.IsNullOrEmpty())
                        {
                            <li class="nav-item @(Model.ActiveMenuItemName == subMenuItem.Name ? "active" : "")">
                                <a class="nav-link" href="@calculateMenuUrl(subMenuItem.Url)" target="@subMenuItem.Target">
                                    @if (!string.IsNullOrWhiteSpace(subMenuItem.Icon))
                                    {
                                        <i class="icon-@(subMenuItem.Icon)"></i>
                                    }
                                    <span>@subMenuItem.DisplayName</span>
                                </a>
                            </li>
                        }
                        else
                        {
                            <li class="nav-item nav-dropdown @(Model.ActiveMenuItemName == subMenuItem.Name ? "active" : "")">
                                <a class="nav-link nav-dropdown-toggle" href="javascript:void(0);" class="menu-toggle" >
                                    @if (!string.IsNullOrWhiteSpace(subMenuItem.Icon))
                                    {
                                        <i class="icon-@(subMenuItem.Icon)"></i>
                                    }
                                    <span>@subMenuItem.DisplayName</span>
                                </a>
                                <ul class="nav-dropdown-items">
                                    @foreach (var subSubMenuItem in subMenuItem.Items)
                                    {
                                        <li class="nav-item @(Model.ActiveMenuItemName == subSubMenuItem.Name ? "active" : "")">
                                            <a class="nav-link" href="@calculateMenuUrl(subSubMenuItem.Url)" target="@subSubMenuItem.Target">
                                                @if (!string.IsNullOrWhiteSpace(subSubMenuItem.Icon))
                                                {
                                                    <i class="icon-@(subSubMenuItem.Icon)"></i>
                                                }
                                                <span>@subSubMenuItem.DisplayName</span>
                                            </a>
                                        </li>
                                    }
                                </ul>
                            </li>
                        }
                    }
                }
                else
                {
                    <li class="nav-item nav-dropdown @(Model.ActiveMenuItemName == menuItem.Name ? "active" : "")">
                        <a class="nav-link nav-dropdown-toggle" href="javascript:void(0);">
                            @if (!string.IsNullOrWhiteSpace(menuItem.Icon))
                            {
                                <i class="icon-@(menuItem.Icon)"></i>
                            }
                            <span>@menuItem.DisplayName</span>
                        </a>

                        <ul class="nav-dropdown-items">
                            @foreach (var subMenuItem in menuItem.Items)
                            {
                                if (subMenuItem.Items.IsNullOrEmpty())
                                {
                                    <li class="nav-item @(Model.ActiveMenuItemName == subMenuItem.Name ? "active" : "")">
                                        <a class="nav-link" href="@calculateMenuUrl(subMenuItem.Url)" target="@subMenuItem.Target">
                                            @if (!string.IsNullOrWhiteSpace(subMenuItem.Icon))
                                            {
                                                <i class="icon-@(subMenuItem.Icon)"></i>
                                            }
                                            <span>@subMenuItem.DisplayName</span>
                                        </a>
                                    </li>
                                }
                                else
                                {
                                    <li class="nav-item nav-dropdown @(Model.ActiveMenuItemName == subMenuItem.Name ? "active" : "")">
                                        <a class="nav-link nav-dropdown-toggle" href="javascript:void(0);" class="menu-toggle">
                                            @if (!string.IsNullOrWhiteSpace(subMenuItem.Icon))
                                            {
                                                <i class="icon-@(subMenuItem.Icon)"></i>
                                            }
                                            <span>@subMenuItem.DisplayName</span>
                                        </a>
                                        <ul class="nav-dropdown-items">
                                            @foreach (var subSubMenuItem in subMenuItem.Items)
                                            {
                                                <li class="nav-item @(Model.ActiveMenuItemName == subSubMenuItem.Name ? "active" : "")">
                                                    <a class="nav-link" href="@calculateMenuUrl(subSubMenuItem.Url)" target="@subSubMenuItem.Target">
                                                        @subSubMenuItem.DisplayName
                                                    </a>
                                                </li>
                                            }
                                        </ul>
                                    </li>
                                }
                            }
                        </ul>
                    </li>
                }
            }
        </ul>
    </nav>
</div>
